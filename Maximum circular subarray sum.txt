 static int circularSubarraySum(int a[], int n) {
         if(n==1)return a[0];
        return Integer.max(kadane(a,n), reverseKadane(a,n));
    }
   static int kadane(int arr[],int n)
        {
           int max=arr[0];
           int res=arr[0];
           for(int i=1;i<n;i++)
           {
               max=Math.max(max+arr[i],arr[i]);
               res=Math.max(res,max);
           }
           return res;
        }
        static int reverseKadane(int arr[],int n)
        {
           int min=0;
           int res=arr[0];
           int sum=0;
           for(int i=0;i<n;i++)sum+=arr[i];
           for(int i=1;i<n;i++)
           {
               min=Math.min(min+arr[i],arr[i]);
               res=Math.min(res,min);
              
           }
           return sum-res;
           
        }
    
}

